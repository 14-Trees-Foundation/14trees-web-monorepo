{
  "swagger": "2.0",
  "info": {
    "title": "14Trees-Postgres-API",
    "description": "Backend APIs for 14Trees-service",
    "version": "1.0.0"
  },
  "host": "localhost:8088",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/api/appv2/healthCheck": {
      "get": {
        "tags": [
          "Application"
        ],
        "description": "Health check api for mobile application to check if server is running or not",
        "responses": {
          "200": {
            "description": "Server is reachable"
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/appv2/test-upload": {
      "post": {
        "summary": "Test upload",
        "description": "Endpoint for testing file upload.",
        "tags": [
          "Application"
        ],
        "responses": {
          "200": {
            "description": "File received successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticates a user with phone and pin number.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string",
                  "example": "919876543210"
                },
                "pinNumber": {
                  "type": "string",
                  "example": "1234"
                }
              },
              "required": [
                "phone",
                "pinNumber"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "user_id": {
                      "type": "string",
                      "example": "user123"
                    },
                    "phone": {
                      "type": "string",
                      "example": "9876543210"
                    },
                    "email": {
                      "type": "string",
                      "example": "john.doe@example.com"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "admin",
                        "treelogging"
                      ]
                    },
                    "token": {
                      "type": "string",
                      "example": "jwt_token"
                    }
                  }
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "example": 2
                    },
                    "errorMsg": {
                      "type": "string",
                      "example": "User not authorized"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "example": 2
                    },
                    "errorMsg": {
                      "type": "string",
                      "example": "Please fill all fields."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "integer",
                      "example": 2
                    },
                    "errorMsg": {
                      "type": "string",
                      "example": "Incorrect User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData": {
      "post": {
        "summary": "Fetch helper data",
        "description": "Fetches plant types, plots, and sapling IDs. Returns data only if the hash has changed.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "last_hash": {
                  "type": "string",
                  "example": "previous_hash_value"
                }
              },
              "required": [
                "last_hash"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "plant_types": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Oak"
                          },
                          "description": {
                            "type": "string",
                            "example": "A type of tree"
                          }
                        }
                      }
                    },
                    "plots": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "Plot A"
                          },
                          "area": {
                            "type": "number",
                            "example": 100.5
                          }
                        }
                      }
                    },
                    "sapling_ids": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sapling_id": {
                            "type": "string",
                            "example": "sapling123"
                          }
                        }
                      }
                    }
                  }
                },
                "hash": {
                  "type": "string",
                  "example": "current_hash_value"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchShifts": {
      "post": {
        "description": "",
        "tags": [
          "Depricate"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "last_hash": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/appv2/uploadShifts": {
      "post": {
        "description": "",
        "tags": [
          "Depricate"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/appv2/uploadLogs": {
      "post": {
        "summary": "Upload logs",
        "description": "Uploads logs from the client to the server.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of log data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "device_info": {
                    "type": "string",
                    "example": "Device XYZ"
                  },
                  "phone_info": {
                    "type": "string",
                    "example": "Phone ABC"
                  },
                  "logs": {
                    "type": "string",
                    "example": "Log details here"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-10-01T12:34:56Z"
                  }
                },
                "required": [
                  "user_id",
                  "device_info",
                  "logs",
                  "timestamp"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs inserted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": "Logs inserted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "No logs found in request body!"
                }
              }
            }
          },
          "500": {
            "description": "Error inserting logs",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error inserting logs"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/uploadTrees": {
      "post": {
        "summary": "Upload trees",
        "description": "Uploads new trees and their images.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of trees to upload",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sapling_id": {
                    "type": "string",
                    "example": "sapling123"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "base64encodedimage"
                    }
                  },
                  "user_tree_image": {
                    "type": "string",
                    "example": "base64encodedimage"
                  },
                  "user_card_image": {
                    "type": "string",
                    "example": "base64encodedimage"
                  },
                  "coordinates": {
                    "type": "array",
                    "items": {
                      "type": "number",
                      "example": 12.345678
                    }
                  },
                  "plot_id": {
                    "type": "string",
                    "example": "plot123"
                  },
                  "plant_type_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "assigned_to": {
                    "type": "integer",
                    "example": 1
                  },
                  "assigned_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-10-01T12:34:56Z"
                  },
                  "planted_by": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "tree_status": {
                    "type": "string",
                    "example": "Healthy"
                  },
                  "visit_id": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": [
                  "sapling_id",
                  "images",
                  "coordinates",
                  "plant_type_id",
                  "tree_status"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trees uploaded successfully",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "dataUploaded": {
                    "type": "boolean",
                    "example": true
                  },
                  "imagesUploaded": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://example.com/image.jpg"
                    }
                  },
                  "imagesFailed": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://example.com/failed_image.jpg"
                    }
                  },
                  "dataSaveError": {
                    "type": "string",
                    "example": "Error message if any"
                  },
                  "treeId": {
                    "type": "integer",
                    "example": 1
                  },
                  "tree": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "sapling_id": {
                        "type": "string",
                        "example": "sapling123"
                      },
                      "plant_type_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "plot_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Point"
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "example": 12.345678
                            }
                          }
                        }
                      },
                      "planted_by": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "tree_status": {
                        "type": "string",
                        "example": "Healthy"
                      },
                      "assigned_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      },
                      "assigned_to": {
                        "type": "integer",
                        "example": 1
                      },
                      "user_tree_image": {
                        "type": "string",
                        "example": "https://example.com/user_tree_image.jpg"
                      },
                      "user_card_image": {
                        "type": "string",
                        "example": "https://example.com/user_card_image.jpg"
                      },
                      "visit_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "description": {
                        "type": "string",
                        "example": "Visit description"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error uploading trees"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/uploadNewImages": {
      "post": {
        "summary": "Upload new images",
        "description": "Uploads new images for trees and updates their status.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of trees with images",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sapling_id": {
                    "type": "string",
                    "example": "sapling123"
                  },
                  "image": {
                    "type": "string",
                    "example": "base64encodedimage"
                  },
                  "tree_status": {
                    "type": "string",
                    "example": "Healthy"
                  },
                  "user_id": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": [
                  "sapling_id",
                  "image",
                  "tree_status",
                  "user_id"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Images uploaded successfully",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "dataUploaded": {
                    "type": "boolean",
                    "example": true
                  },
                  "imagesUploaded": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://example.com/image.jpg"
                    }
                  },
                  "imagesFailed": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://example.com/failed_image.jpg"
                    }
                  },
                  "dataSaveError": {
                    "type": "string",
                    "example": "Error message if any"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error uploading images"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/treesUpdatePlot": {
      "post": {
        "summary": "Update tree plot",
        "description": "Updates the plot of trees based on their sapling IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of trees with new plot information",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "sapling_id": {
                    "type": "string",
                    "example": "sapling123"
                  },
                  "old_plot": {
                    "type": "integer",
                    "example": 1
                  },
                  "new_plot": {
                    "type": "integer",
                    "example": 2
                  }
                },
                "required": [
                  "sapling_id",
                  "old_plot",
                  "new_plot"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plot updated successfully",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "dataUploaded": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "plot updated successfully"
                  },
                  "dataSaveError": {
                    "type": "string",
                    "example": "Error message if any"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error updating plot"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/getSapling": {
      "post": {
        "tags": [
          "Depricate"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sapling_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/appv2/updateSapling": {
      "post": {
        "summary": "Update sapling by admin",
        "description": "Updates the details of a sapling by an admin.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Sapling details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tree": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "sapling_id": {
                      "type": "string",
                      "example": "sapling123"
                    },
                    "name": {
                      "type": "string",
                      "example": "Oak"
                    },
                    "image": {
                      "type": "string",
                      "example": "https://example.com/image.jpg"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-10-01T12:34:56Z"
                    }
                  },
                  "required": [
                    "id",
                    "sapling_id",
                    "name"
                  ]
                },
                "delete_image": {
                  "type": "string",
                  "example": "https://example.com/old_image.jpg"
                },
                "new_image": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "new_image.jpg"
                    },
                    "data": {
                      "type": "string",
                      "example": "base64encodeddata"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "capturetimestamp": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-10-01T12:34:56Z"
                        },
                        "remark": {
                          "type": "string",
                          "example": "New sapling image"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "tree"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sapling updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "sapling_id": {
                  "type": "string",
                  "example": "sapling123"
                },
                "name": {
                  "type": "string",
                  "example": "Oak"
                },
                "image": {
                  "type": "string",
                  "example": "https://example.com/image.jpg"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Please pass a sapling details in the body."
                }
              }
            }
          },
          "500": {
            "description": "Error updating sapling",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Error updating sapling"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/users": {
      "post": {
        "summary": "Get delta users",
        "description": "Fetches users created or updated after a given timestamp and deleted users from a list of user IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta users",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "user_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                      },
                      "phone": {
                        "type": "string",
                        "example": "9876543210"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                },
                "deleted_user_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/trees": {
      "post": {
        "summary": "Get delta trees",
        "description": "Fetches trees created or updated after a given timestamp and deleted trees from a list of tree IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta trees",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "integer",
                  "example": 1
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "tree_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "trees": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "sapling_id": {
                        "type": "string",
                        "example": "sapling123"
                      },
                      "plant_type_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "plot_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "Point"
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "example": 12.345678
                            }
                          }
                        }
                      },
                      "planted_by": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "tree_status": {
                        "type": "string",
                        "example": "Healthy"
                      },
                      "assigned_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      },
                      "assigned_to": {
                        "type": "integer",
                        "example": 1
                      },
                      "user_tree_image": {
                        "type": "string",
                        "example": "https://example.com/user_tree_image.jpg"
                      },
                      "user_card_image": {
                        "type": "string",
                        "example": "https://example.com/user_card_image.jpg"
                      },
                      "visit_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "description": {
                        "type": "string",
                        "example": "Visit description"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                },
                "deleted_tree_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/sites": {
      "post": {
        "summary": "Get delta sites",
        "description": "Fetches sites created or updated after a given timestamp and deleted sites from a list of site IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta sites",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "site_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "sites": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Site A"
                      },
                      "location": {
                        "type": "string",
                        "example": "Location A"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                },
                "deleted_site_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/plots": {
      "post": {
        "summary": "Get delta plots",
        "description": "Fetches plots created or updated after a given timestamp and deleted plots from a list of plot IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta plots",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "integer",
                  "example": 1
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "plot_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "plots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Plot A"
                      },
                      "area": {
                        "type": "number",
                        "example": 100.5
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                },
                "deleted_plot_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/visits": {
      "post": {
        "summary": "Get delta visits",
        "description": "Fetches visits created or updated after a given timestamp and deleted visits from a list of visit IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta visits",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "integer",
                  "example": 1
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "visit_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "visits": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "site_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "visit_name": {
                        "type": "string",
                        "example": "Visit A"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                },
                "deleted_visit_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/visit-images": {
      "post": {
        "summary": "Get delta visit images",
        "description": "Fetches visit images created or updated after a given timestamp and deleted visit images from a list of visit image IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta visit images",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "integer",
                  "example": 1
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "visit_image_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "visit_images": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "site_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "image_url": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                },
                "deleted_visit_image_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/tree-snapshots": {
      "post": {
        "summary": "Get delta tree snapshots",
        "description": "Fetches tree snapshots created or updated after a given timestamp and deleted tree snapshots from a list of tree snapshot IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta tree snapshots",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "type": "integer",
                  "example": 1
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "tree_snapshot_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "tree_snapshots": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "sapling_id": {
                        "type": "string",
                        "example": "sapling123"
                      },
                      "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                      },
                      "image_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      },
                      "tree_status": {
                        "type": "string",
                        "example": "Healthy"
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      },
                      "is_active": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                },
                "deleted_tree_snapshot_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/sync-history": {
      "post": {
        "summary": "Get delta sync histories",
        "description": "Fetches sync histories created after a given timestamp for a specific user.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta sync histories",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer",
                  "example": 1
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "user_id",
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "sync_histories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/fetchHelperData/plant-types": {
      "post": {
        "summary": "Get delta plant types",
        "description": "Fetches plant types created or updated after a given timestamp and deleted plant types from a list of plant type IDs.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching delta plant types",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "plant_type_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "offset": {
                  "type": "integer",
                  "example": 0
                },
                "limit": {
                  "type": "integer",
                  "example": 1000
                }
              },
              "required": [
                "timestamp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "plant_types": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "example": "Oak"
                      }
                    }
                  }
                },
                "deleted_plant_type_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/sync-history": {
      "post": {
        "summary": "Add sync history",
        "description": "Adds a new sync history record.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for adding sync history",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "1"
                },
                "sync_info": {
                  "type": "object",
                  "properties": {
                    "trees": {
                      "type": "integer",
                      "example": 10
                    },
                    "users": {
                      "type": "integer",
                      "example": 5
                    },
                    "tree_images": {
                      "type": "integer",
                      "example": 20
                    },
                    "visit_images": {
                      "type": "integer",
                      "example": 15
                    },
                    "upload_error": {
                      "type": "string",
                      "example": "No errors"
                    },
                    "upload_time": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-10-01T12:34:56Z"
                    },
                    "synced_at": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-10-01T12:34:56Z"
                    }
                  },
                  "required": [
                    "trees",
                    "tree_images",
                    "visit_images",
                    "upload_error",
                    "upload_time",
                    "synced_at"
                  ]
                }
              },
              "required": [
                "user_id",
                "sync_info"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sync history added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "trees": {
                  "type": "integer",
                  "example": 10
                },
                "users": {
                  "type": "integer",
                  "example": 5
                },
                "tree_images": {
                  "type": "integer",
                  "example": 20
                },
                "visit_images": {
                  "type": "integer",
                  "example": 15
                },
                "upload_error": {
                  "type": "string",
                  "example": "No errors"
                },
                "upload_time": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "synced_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "user_id": {
                  "type": "integer",
                  "example": 1
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2023-10-01T12:34:56Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "User Id is required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/appv2/trees-count": {
      "get": {
        "summary": "Get trees count",
        "description": "Fetches the count of trees planted.",
        "tags": [
          "Application"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "description": "Name of the person who planted the trees",
            "required": false,
            "type": "string",
            "example": "John Doe"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "properties": {
                "total_trees_planted": {
                  "type": "integer",
                  "example": 1000
                },
                "trees_planted_this_year": {
                  "type": "integer",
                  "example": 100
                },
                "trees_planted_this_month": {
                  "type": "integer",
                  "example": 10
                },
                "trees_planted_by_you": {
                  "type": "integer",
                  "example": 50
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "summary": "Get user",
        "description": "Fetches a user by name and email.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the user",
            "required": true,
            "type": "string",
            "example": "John Doe"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the user",
            "required": true,
            "type": "string",
            "example": "john.doe@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "9876543210"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "admin",
                    "user"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User name and email are required"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add user",
        "description": "Adds a new user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for adding a user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "9876543210"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "admin",
                    "user"
                  ]
                }
              },
              "required": [
                "name",
                "email"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "9876543210"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "admin",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "User already exists"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/get": {
      "post": {
        "summary": "Get users",
        "description": "Fetches a list of users with optional filters.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching users",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "filters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "columnField": {
                        "type": "string",
                        "example": "email"
                      },
                      "operatorValue": {
                        "type": "string",
                        "example": "equals"
                      },
                      "value": {
                        "type": "string",
                        "example": "john.doe@example.com"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "type": "integer",
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for pagination",
            "required": false,
            "type": "integer",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "9876543210"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "admin",
                      "user"
                    ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{search}": {
      "get": {
        "summary": "Search users",
        "description": "Searches for users by a search term.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "description": "Search term",
            "required": true,
            "type": "string",
            "example": "John"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "type": "integer",
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for pagination",
            "required": false,
            "type": "integer",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Users found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  },
                  "phone": {
                    "type": "string",
                    "example": "9876543210"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "admin",
                      "user"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Please provide at least 3 char to search"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/bulk": {
      "post": {
        "summary": "Add users in bulk",
        "description": "Adds multiple users from a CSV file.",
        "tags": [
          "Users"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "description": "CSV file containing user data",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Users added successfully",
            "schema": {
              "type": "file"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error saving users data."
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "put": {
        "summary": "Update user",
        "description": "Updates an existing user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for updating a user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "9876543210"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "admin",
                    "user"
                  ]
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phone": {
                  "type": "string",
                  "example": "9876543210"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "admin",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Deletes an existing user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "type": "string",
              "example": "User deleted successfully"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User id is required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/combine": {
      "post": {
        "summary": "Combine users",
        "description": "Combines two user accounts into one, transferring all related data from the secondary user to the primary user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for combining users",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "primary_user": {
                  "type": "integer",
                  "example": 1
                },
                "secondary_user": {
                  "type": "integer",
                  "example": 2
                },
                "delete_secondary": {
                  "type": "boolean",
                  "example": true
                }
              },
              "required": [
                "primary_user",
                "secondary_user"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users combined successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Users combined successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid request body"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Something went wrong. Please try again after some time!"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{search}": {
      "get": {
        "summary": "Search groups",
        "description": "Searches for groups by a search term.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "description": "Search term",
            "required": true,
            "type": "string",
            "example": "Group A"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "type": "integer",
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for pagination",
            "required": false,
            "type": "integer",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Groups found",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Group A"
                  },
                  "type": {
                    "type": "string",
                    "example": "Type A"
                  },
                  "logo_url": {
                    "type": "string",
                    "example": "https://example.com/logo.jpg"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/get": {
      "post": {
        "summary": "Get groups",
        "description": "Fetches a list of groups with optional filters.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body for fetching groups",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "filters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "columnField": {
                        "type": "string",
                        "example": "name"
                      },
                      "operatorValue": {
                        "type": "string",
                        "example": "contains"
                      },
                      "value": {
                        "type": "string",
                        "example": "Group A"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "type": "integer",
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit for pagination",
            "required": false,
            "type": "integer",
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Groups fetched successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "Group A"
                  },
                  "type": {
                    "type": "string",
                    "example": "Type A"
                  },
                  "logo_url": {
                    "type": "string",
                    "example": "https://example.com/logo.jpg"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/": {
      "post": {
        "summary": "Add group",
        "description": "Adds a new group.",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "name",
            "description": "Name of the group",
            "required": true,
            "type": "string",
            "example": "Group A"
          },
          {
            "in": "formData",
            "name": "type",
            "description": "Type of the group",
            "required": true,
            "type": "string",
            "example": "Type A"
          },
          {
            "in": "formData",
            "name": "logo",
            "description": "Logo of the group",
            "required": false,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "csv_file",
            "description": "CSV file for bulk upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "Group added successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Group A"
                },
                "type": {
                  "type": "string",
                  "example": "Type A"
                },
                "logo_url": {
                  "type": "string",
                  "example": "https://example.com/logo.jpg"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Group name is required"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{id}": {
      "put": {
        "summary": "Update group",
        "description": "Updates an existing group.",
        "tags": [
          "Groups"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "id",
            "description": "ID of the group",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "in": "formData",
            "name": "name",
            "description": "Name of the group",
            "required": false,
            "type": "string",
            "example": "Group A"
          },
          {
            "in": "formData",
            "name": "type",
            "description": "Type of the group",
            "required": false,
            "type": "string",
            "example": "Type A"
          },
          {
            "in": "formData",
            "name": "logo",
            "description": "Logo of the group",
            "required": false,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "csv_file",
            "description": "CSV file for bulk upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Group updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Group A"
                },
                "type": {
                  "type": "string",
                  "example": "Type A"
                },
                "logo_url": {
                  "type": "string",
                  "example": "https://example.com/logo.jpg"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete group",
        "description": "Deletes an existing group.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group to delete",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Group deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Group deleted successfully"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Something went wrong!"
                }
              }
            }
          }
        }
      }
    },
    "/api/user-groups/": {
      "get": {
        "summary": "Get User Group",
        "description": "Fetch a user group by user ID and group ID.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "User ID"
          },
          {
            "name": "group_id",
            "in": "query",
            "required": true,
            "type": "integer",
            "description": "Group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Add User Group",
        "description": "Add a new user group. Either `user_id` or new user details are required.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "group_id": {
                  "type": "integer",
                  "description": "Group ID"
                },
                "user_id": {
                  "type": "integer",
                  "description": "User ID"
                },
                "name": {
                  "type": "string",
                  "description": "New user name"
                },
                "email": {
                  "type": "string",
                  "description": "New user email"
                },
                "phone": {
                  "type": "string",
                  "description": "New user phone"
                }
              },
              "required": [
                "group_id"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User group created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "409": {
            "description": "User group already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete Group Users",
        "description": "Delete multiple users from a group.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "List of user IDs"
                },
                "group_id": {
                  "type": "integer",
                  "description": "Group ID"
                }
              },
              "required": [
                "user_ids",
                "group_id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users deleted from group successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user-groups/bulk": {
      "post": {
        "summary": "Bulk Add User Groups",
        "description": "Add multiple users to a group using a CSV file.",
        "tags": [
          "Groups"
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "formData",
            "required": true,
            "type": "integer",
            "description": "Group ID"
          },
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "CSV file containing user details"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "201": {
            "description": "Bulk user groups added successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Group not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/admin/users": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/addtree": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/change-plot": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tree_ids": {
                  "example": "any"
                },
                "plot_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/get-giftable": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/tags": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/getsaplingid": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/gettree": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "sapling_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/groupbyplots": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/loggedbydate": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/treelogbyuser": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/treelogbyplot": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/treetypecount": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/treetypecount/plotwise": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/assigned/{user_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/mapped/{user_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/get-trees-plantation-info": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/count/user/{user_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/corporate-stats/tree-logged": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/trees/mapped-gift/get": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "group_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/tags/get": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/{plot_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "plot_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/states": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/plot-states": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/sync": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/templates/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "plant_type": {
                  "example": "any"
                },
                "template_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/illustrations/": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plant-types/corporate-stats": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sapling_ids": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/id": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/allprofile": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/userid": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "userid",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/user/{user_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/usertreereg": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sapling_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/usertreereg/multi": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                },
                "sponsored_by_user": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "site_id": {
                  "example": "any"
                },
                "tags": {
                  "example": "any"
                },
                "event_date": {
                  "example": "any"
                },
                "event_location": {
                  "example": "any"
                },
                "sapling_ids": {
                  "example": "any"
                },
                "user_image": {
                  "example": "any"
                },
                "album_images": {
                  "example": "any"
                },
                "sponsored_by_group": {
                  "example": "any"
                },
                "gifted_by": {
                  "example": "any"
                },
                "planted_by": {
                  "example": "any"
                },
                "visited": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/assignBulk/{donation_id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "donation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/profile/update": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/map-plot-trees": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "sponsor_id": {
                  "example": "any"
                },
                "plot_id": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                },
                "mapped_to": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/map-multi-plots-trees": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "plot_ids": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                },
                "mapped_to": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/map": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "sponsorId": {
                  "example": "any"
                },
                "sapling_ids": {
                  "example": "any"
                },
                "mapped_to": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/unmap": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sapling_ids": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/{email}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/group/{group_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/mapping/count/usertreescount": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "plot_name": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "tags": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/assign-site": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "plot_ids": {
                  "example": "any"
                },
                "site_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/kml": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "site_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/stats/category": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/stats": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/corporate-stats": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/plots/corporate-analytics": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "maintenance_type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "maintenance_type": {
                  "example": "any"
                },
                "tags": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/sync-sites": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/stats": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/stats/{field}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "field",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/districts": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/tags": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/corporate/{groupId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/sites/corporate-stats": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/requests/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/requests": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "group_id": {
                  "example": "any"
                },
                "no_of_cards": {
                  "example": "any"
                },
                "primary_message": {
                  "example": "any"
                },
                "secondary_message": {
                  "example": "any"
                },
                "event_name": {
                  "example": "any"
                },
                "event_type": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "grove": {
                  "example": "any"
                },
                "planted_by": {
                  "example": "any"
                },
                "logo_message": {
                  "example": "any"
                },
                "request_id": {
                  "example": "any"
                },
                "notes": {
                  "example": "any"
                },
                "payment_id": {
                  "example": "any"
                },
                "created_by": {
                  "example": "any"
                },
                "gifted_on": {
                  "example": "any"
                },
                "request_type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/requests/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "validation_errors": {
                  "example": "any"
                },
                "tags": {
                  "example": "any"
                },
                "id": {
                  "example": "any"
                },
                "request_id": {
                  "example": "any"
                },
                "logo_url": {
                  "example": "any"
                },
                "users_csv_file_url": {
                  "example": "any"
                },
                "payment_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/requests/clone": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_request_id": {
                  "example": "any"
                },
                "request_id": {
                  "example": "any"
                },
                "created_by": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "example": "any"
                },
                "gift_card_request_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/users/{gift_card_request_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "gift_card_request_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/users": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_request_id": {
                  "example": "any"
                },
                "users": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/plots": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "plot_ids": {
                  "example": "any"
                },
                "gift_card_request_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/book": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_request_id": {
                  "example": "any"
                },
                "gift_card_trees": {
                  "example": "any"
                },
                "diversify": {
                  "example": "any"
                },
                "book_non_giftable": {
                  "example": "any"
                },
                "book_all_habits": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/unbook": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_request_id": {
                  "example": "any"
                },
                "tree_ids": {
                  "example": "any"
                },
                "unmap_all": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/trees/{gift_card_request_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "gift_card_request_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/generate-template/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sapling_id": {
                  "example": "any"
                },
                "plant_type": {
                  "example": "any"
                },
                "user_name": {
                  "example": "any"
                },
                "primary_message": {
                  "example": "any"
                },
                "secondary_message": {
                  "example": "any"
                },
                "logo": {
                  "example": "any"
                },
                "logo_message": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/update-template": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_name": {
                  "example": "any"
                },
                "sapling_id": {
                  "example": "any"
                },
                "slide_id": {
                  "example": "any"
                },
                "primary_message": {
                  "example": "any"
                },
                "secondary_message": {
                  "example": "any"
                },
                "logo": {
                  "example": "any"
                },
                "logo_message": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/card/redeem": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_id": {
                  "example": "any"
                },
                "event_type": {
                  "example": "any"
                },
                "event_name": {
                  "example": "any"
                },
                "gifted_on": {
                  "example": "any"
                },
                "gifted_by": {
                  "example": "any"
                },
                "user": {
                  "example": "any"
                },
                "tree_id": {
                  "example": "any"
                },
                "profile_image_url": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/assign": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_request_id": {
                  "example": "any"
                },
                "trees": {
                  "example": "any"
                },
                "auto_assign": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/generate/{gift_card_request_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "gift_card_request_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/download/{gift_card_request_id}": {
      "get": {
        "description": "",
        "produces": [
          null
        ],
        "parameters": [
          {
            "name": "gift_card_request_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "downloadType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/gift-cards/update-album/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "gift_card_request_id": {
                  "example": "any"
                },
                "album_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/update-users/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/requests/tags": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/gift-cards/requests/fund-request/{gift_card_request_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "gift_card_request_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/events/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/events/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/events/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "assigned_by": {
                  "example": "any"
                },
                "site_id": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "tags": {
                  "example": "any"
                },
                "event_date": {
                  "example": "any"
                },
                "event_location": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/events/corp/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "event_name": {
                  "example": "any"
                },
                "event_link": {
                  "example": "any"
                },
                "long_desc": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/events/corp/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "event_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/events/corp/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/organizations/add": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/organizations/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/organizations/{search}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/organizations/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/totaltrees": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/totalplanttypes": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/totalponds": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/totalemp": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/totalUsers": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/totalPlots": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/analytics/summary": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/search/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/auth/google": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/donations/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/{donation_id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "donation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donation": {
                  "example": "any"
                },
                "users": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/work-order/{donation_id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "donation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/update-feedback": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "feedback": {
                  "example": "any"
                },
                "source_info": {
                  "example": "any"
                },
                "request_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/book-trees": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donation_id": {
                  "example": "any"
                },
                "plot_ids": {
                  "example": "any"
                },
                "trees": {
                  "example": "any"
                },
                "diversify": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/users/{donation_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "donation_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/donations/emails/ack": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "donation_id": {
                  "example": "any"
                },
                "cc_mails": {
                  "example": "any"
                },
                "test_mails": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/{search}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "search",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/get": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "length_ft": {
                  "example": "any"
                },
                "width_ft": {
                  "example": "any"
                },
                "depth_ft": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/waterlevel/{pond_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "pond_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/waterlevel": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "pond_id": {
                  "example": "any"
                },
                "level_ft": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/ponds/waterlevel/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "pond_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/onsitestaff/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/onsitestaff/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/albums/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/albums/{email}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "album_name": {
                  "example": "any"
                },
                "file_names": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/albums/id/{album_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "album_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/albums/": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "album_id": {
                  "example": "any"
                },
                "files": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/visits/get": {
      "get": {
        "summary": "Get Visits",
        "tags": [
          "Visits"
        ],
        "description": "Retrieve a list of visits with optional filters, offset, and limit.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Offset for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Limit for pagination"
          },
          {
            "name": "filters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/FilterItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of visits",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Visit"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/visits/": {
      "post": {
        "summary": "Add Visit",
        "tags": [
          "Visits"
        ],
        "description": "Create a new visit record.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Visit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Visit added successfully"
          },
          "400": {
            "description": "Bad request (e.g., missing corporate group id for corporate visit)"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/visits/{id}": {
      "put": {
        "summary": "Update Visit",
        "tags": [
          "Visits"
        ],
        "description": "Update an existing visit record.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Visit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Visit updated successfully"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete Visit",
        "tags": [
          "Visits"
        ],
        "description": "Delete a visit by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the visit to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Visit deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/visit-users/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "visit_id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "visit_id": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                },
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_ids": {
                  "example": "any"
                },
                "visit_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/visit-users/bulk": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "visit_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/visit-users/sync-notion": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/visit-images/{visit_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "visit_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/visit-images/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "visit_id": {
                  "example": "any"
                },
                "images": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/visit-images/delete": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "image_ids": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/tree-snapshots/{sapling_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "sapling_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/tree-snapshots/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "sapling_id": {
                  "example": "any"
                },
                "user_id": {
                  "example": "any"
                },
                "images": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/tree-snapshots/delete": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "image_ids": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/tags/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/utils/signedPutUrl": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/utils/scrap": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "example": "any"
                },
                "request_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/utils/s3keys/{request_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/utils/gmail": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/email-templates/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/email-templates/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "template_name": {
                  "example": "any"
                },
                "event_type": {
                  "example": "any"
                },
                "event_name": {
                  "example": "any"
                },
                "template_type": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/payments/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/payments/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "example": "any"
                },
                "donor_type": {
                  "example": "any"
                },
                "pan_number": {
                  "example": "any"
                },
                "consent": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/payments/history": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "payment_id": {
                  "example": "any"
                },
                "amount": {
                  "example": "any"
                },
                "payment_method": {
                  "example": "any"
                },
                "payment_proof": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/payments/history/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/payments/verify/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "example": "any"
                },
                "razorpay_payment_id": {
                  "example": "any"
                },
                "razorpay_signature": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/payments/order-payments/{order_id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/wa/incoming": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "entry": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/wa/incoming-flow": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Visit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the visit"
        },
        "visit_type": {
          "type": "string",
          "description": "Type of visit (e.g., corporate, individual)"
        },
        "group_id": {
          "type": "string",
          "description": "Group ID for corporate visits"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the visit"
        }
      },
      "required": [
        "visit_type"
      ]
    },
    "FilterItem": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "description": "Field to filter by"
        },
        "value": {
          "type": "string",
          "description": "Value to match"
        }
      }
    }
  }
}